"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/index";
exports.ids = ["pages/index"];
exports.modules = {

/***/ "./node_modules/@sismo-core/sismo-connect-react/lib/esm/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@sismo-core/sismo-connect-react/lib/esm/index.js ***!
  \***********************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApiFetcher: () => (/* binding */ ApiFetcher),\n/* harmony export */   AuthType: () => (/* binding */ AuthType),\n/* harmony export */   ClaimType: () => (/* binding */ ClaimType),\n/* harmony export */   IMPERSONATION_VAULT_APP_BASE_URL: () => (/* binding */ IMPERSONATION_VAULT_APP_BASE_URL),\n/* harmony export */   MAIN_VAULT_APP_BASE_URL: () => (/* binding */ MAIN_VAULT_APP_BASE_URL),\n/* harmony export */   ProvingScheme: () => (/* binding */ ProvingScheme),\n/* harmony export */   RequestBuilder: () => (/* binding */ RequestBuilder),\n/* harmony export */   SISMO_CONNECT_VERSION: () => (/* binding */ SISMO_CONNECT_VERSION),\n/* harmony export */   Sdk: () => (/* binding */ Sdk),\n/* harmony export */   SismoConnect: () => (/* binding */ SismoConnect),\n/* harmony export */   SismoConnectButton: () => (/* binding */ SismoConnectButton),\n/* harmony export */   SismoConnectClient: () => (/* binding */ SismoConnectClient),\n/* harmony export */   SismoConnectVerifiedResult: () => (/* binding */ SismoConnectVerifiedResult),\n/* harmony export */   Vault: () => (/* binding */ Vault),\n/* harmony export */   getGroupFromIdQuery: () => (/* binding */ getGroupFromIdQuery),\n/* harmony export */   getGroupFromNameQuery: () => (/* binding */ getGroupFromNameQuery),\n/* harmony export */   resolveSismoIdentifier: () => (/* binding */ resolveSismoIdentifier),\n/* harmony export */   sismoApiUrls: () => (/* binding */ sismoApiUrls),\n/* harmony export */   sismoConnectErrorsABI: () => (/* binding */ sismoConnectErrorsABI),\n/* harmony export */   toSismoIdentifier: () => (/* binding */ toSismoIdentifier),\n/* harmony export */   useSismoConnect: () => (/* binding */ useSismoConnect)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var pako__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! pako */ \"pako\");\n/* harmony import */ var js_base64__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! js-base64 */ \"js-base64\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem */ \"viem\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([pako__WEBPACK_IMPORTED_MODULE_1__, js_base64__WEBPACK_IMPORTED_MODULE_2__, viem__WEBPACK_IMPORTED_MODULE_3__]);\n([pako__WEBPACK_IMPORTED_MODULE_1__, js_base64__WEBPACK_IMPORTED_MODULE_2__, viem__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign$1 = function() {\r\n    __assign$1 = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign$1.apply(this, arguments);\r\n};\n\nfunction styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css_248z$1 = \".sismoConnectButton {\\n    color: #FFFFFF;\\n    background: #1C2847;\\n    border: 1px solid #3F4973;\\n    border-radius: 10px;\\n    padding: 15px 25px;\\n    display: flex;\\n    align-items: center;\\n    gap: 10px;\\n    cursor: pointer;\\n}\\n\\n.sismoConnectButtonText {\\n    font-weight: 400;\\n    font-size: 18px;\\n}\\n\\n.sismoConnectButtonLogo {\\n    height: 16px;\\n    width: 16px;\\n}\";\nstyleInject(css_248z$1);\n\nvar Logo = function () {\n    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\", { width: \"16\", height: \"17\", viewBox: \"0 0 16 17\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\" },\n        react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", { d: \"M7.99994 15.75L15.6234 10.2115L12.7113 1.25H3.28855L0.376465 10.2115L7.99994 15.75Z\", fill: \"url(#paint0_linear_123_4882)\" }),\n        react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", { d: \"M7.99994 15.75L15.6234 10.2115M7.99994 15.75L0.376465 10.2115M7.99994 15.75L13.4088 9.89149M7.99994 15.75L2.6347 9.89149M15.6234 10.2115L12.7113 1.25M15.6234 10.2115L13.4088 9.89149M12.7113 1.25H3.28855M12.7113 1.25L13.4088 9.89149M3.28855 1.25L0.376465 10.2115M3.28855 1.25L13.4088 9.89149M3.28855 1.25L2.6347 9.89149M0.376465 10.2115L2.6347 9.89149\", stroke: \"url(#paint1_linear_123_4882)\", strokeWidth: \"0.5\", strokeMiterlimit: \"10\" }),\n        react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"defs\", null,\n            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"linearGradient\", { id: \"paint0_linear_123_4882\", x1: \"3.5\", y1: \"1.5\", x2: \"11.75\", y2: \"13.25\", gradientUnits: \"userSpaceOnUse\" },\n                react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"stop\", { offset: \"0.0876413\", stopColor: \"#0F1D42\" }),\n                react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"stop\", { offset: \"0.55703\", stopColor: \"#877C6A\" }),\n                react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"stop\", { offset: \"0.914377\", stopColor: \"#E2C488\" })),\n            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"linearGradient\", { id: \"paint1_linear_123_4882\", x1: \"3.5\", y1: \"1\", x2: \"11.75\", y2: \"13.25\", gradientUnits: \"userSpaceOnUse\" },\n                react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"stop\", { stopColor: \"#E2C488\" }),\n                react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"stop\", { offset: \"1\", stopColor: \"#13203D\" })))));\n};\n\nvar css_248z = \".sismoConnectButtonLoader {\\n    width: 16px;\\n    height: 16px;\\n    border: 2px solid #FFF;\\n    border-bottom-color: transparent;\\n    border-radius: 50%;\\n    display: inline-block;\\n    box-sizing: border-box;\\n    animation: rotation 1s linear infinite;\\n}\\n\\n@keyframes rotation {\\n    0% {\\n        transform: rotate(0deg);\\n    }\\n    100% {\\n        transform: rotate(360deg);\\n    }\\n} \";\nstyleInject(css_248z);\n\nvar Loader = function () {\n    return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { className: \"sismoConnectButtonLoader\" });\n};\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\n\nvar SISMO_CONNECT_VERSION = \"sismo-connect-v1.1\";\nvar Vault;\n(function (Vault) {\n    Vault[\"Main\"] = \"main\";\n    Vault[\"Dev\"] = \"dev\";\n    Vault[\"Demo\"] = \"demo\";\n})(Vault || (Vault = {}));\nvar ProvingScheme;\n(function (ProvingScheme) {\n    ProvingScheme[\"HYDRA_S2\"] = \"hydra-s2.1\";\n    ProvingScheme[\"HYDRA_S3\"] = \"hydra-s3.1\";\n})(ProvingScheme || (ProvingScheme = {}));\nvar ClaimType;\n(function (ClaimType) {\n    ClaimType[ClaimType[\"GTE\"] = 0] = \"GTE\";\n    ClaimType[ClaimType[\"GT\"] = 1] = \"GT\";\n    ClaimType[ClaimType[\"EQ\"] = 2] = \"EQ\";\n    ClaimType[ClaimType[\"LT\"] = 3] = \"LT\";\n    ClaimType[ClaimType[\"LTE\"] = 4] = \"LTE\";\n})(ClaimType || (ClaimType = {}));\nvar AuthType;\n(function (AuthType) {\n    AuthType[AuthType[\"VAULT\"] = 0] = \"VAULT\";\n    AuthType[AuthType[\"GITHUB\"] = 1] = \"GITHUB\";\n    AuthType[AuthType[\"TWITTER\"] = 2] = \"TWITTER\";\n    AuthType[AuthType[\"EVM_ACCOUNT\"] = 3] = \"EVM_ACCOUNT\";\n    AuthType[AuthType[\"TELEGRAM\"] = 4] = \"TELEGRAM\";\n})(AuthType || (AuthType = {}));\nvar SismoConnectVerifiedResult = /** @class */ (function () {\n    function SismoConnectVerifiedResult(_a) {\n        var response = _a.response, claims = _a.claims, auths = _a.auths;\n        this.response = response;\n        this.claims = claims;\n        this.auths = auths;\n        this.signedMessage = response.signedMessage;\n    }\n    SismoConnectVerifiedResult.prototype.getUserId = function (authType) {\n        var _a;\n        var userId = (_a = this.auths.find(function (verifiedAuth) { return verifiedAuth.authType === authType; })) === null || _a === void 0 ? void 0 : _a.userId;\n        return resolveSismoIdentifier(userId, authType);\n    };\n    SismoConnectVerifiedResult.prototype.getUserIds = function (authType) {\n        return this.auths\n            .filter(function (verifiedAuth) {\n            return verifiedAuth.authType === authType && verifiedAuth.userId;\n        })\n            .map(function (auth) { return resolveSismoIdentifier(auth.userId, authType); });\n    };\n    SismoConnectVerifiedResult.prototype.getSignedMessage = function () {\n        return this.signedMessage;\n    };\n    return SismoConnectVerifiedResult;\n}());\nvar startsWithHexadecimal = function (str) {\n    var hexRegex = /^0x[0-9a-fA-F]{6}/;\n    return hexRegex.test(str);\n};\nvar resolveSismoIdentifier = function (sismoIdentifier, authType) {\n    if (authType === AuthType.EVM_ACCOUNT || authType === AuthType.VAULT)\n        return sismoIdentifier;\n    if (!startsWithHexadecimal(sismoIdentifier))\n        return sismoIdentifier;\n    var removeLeadingZeros = function (str) {\n        var arr = str.split('');\n        while (arr.length > 1 && arr[0] === '0') {\n            arr.shift();\n        }\n        return arr.join('');\n    };\n    sismoIdentifier = sismoIdentifier.substring(6);\n    sismoIdentifier = removeLeadingZeros(sismoIdentifier);\n    return sismoIdentifier;\n};\nvar toSismoIdentifier = function (identifier, authType) {\n    if (authType === AuthType.EVM_ACCOUNT || authType === AuthType.VAULT)\n        return identifier;\n    if (startsWithHexadecimal(identifier))\n        return identifier;\n    var prefix = '';\n    if (authType === AuthType.GITHUB) {\n        prefix = '0x1001';\n    }\n    if (authType === AuthType.TWITTER) {\n        prefix = '0x1002';\n    }\n    if (authType === AuthType.TELEGRAM) {\n        prefix = '0x1003';\n    }\n    identifier = '0'.repeat(36 - identifier.length) + identifier;\n    identifier = prefix + identifier;\n    return identifier;\n};\nvar RequestBuilder = /** @class */ (function () {\n    function RequestBuilder() {\n    }\n    RequestBuilder.buildAuths = function (auths) {\n        var _a, _b, _c, _d;\n        if (!auths) {\n            return [];\n        }\n        if (!auths.length) {\n            auths = [auths];\n        }\n        auths = auths;\n        for (var _i = 0, auths_1 = auths; _i < auths_1.length; _i++) {\n            var authRequest = auths_1[_i];\n            if (authRequest.isAnon)\n                throw new Error('isAnon not supported yet');\n            if (typeof authRequest.authType === undefined) {\n                throw new Error('you must provide a authType');\n            }\n            authRequest.isAnon = false;\n            authRequest.isOptional = (_a = authRequest.isOptional) !== null && _a !== void 0 ? _a : false;\n            authRequest.userId = (_b = authRequest.userId) !== null && _b !== void 0 ? _b : '0';\n            authRequest.extraData = (_c = authRequest.extraData) !== null && _c !== void 0 ? _c : '';\n            if (authRequest.userId === '0') {\n                authRequest.isSelectableByUser = (_d = authRequest.isSelectableByUser) !== null && _d !== void 0 ? _d : true;\n            }\n            else {\n                authRequest.isSelectableByUser = false;\n            }\n            if (authRequest.authType === AuthType.VAULT) {\n                authRequest.isSelectableByUser = false;\n                authRequest.userId = '0';\n            }\n            if (authRequest.userId !== '0') {\n                authRequest.userId = toSismoIdentifier(authRequest.userId, authRequest.authType);\n            }\n        }\n        return auths;\n    };\n    RequestBuilder.buildClaims = function (claims) {\n        var _a, _b, _c, _d;\n        if (!claims) {\n            return [];\n        }\n        if (claims === null || claims === void 0 ? void 0 : claims.groupId) {\n            claims = [claims];\n        }\n        claims = claims;\n        for (var _i = 0, claims_1 = claims; _i < claims_1.length; _i++) {\n            var claimRequest = claims_1[_i];\n            if (typeof claimRequest.claimType === undefined) {\n                throw new Error('you must provide a claimType');\n            }\n            if (typeof claimRequest.groupId === undefined) {\n                throw new Error('you must provide a groupId');\n            }\n            claimRequest.claimType = (_a = claimRequest.claimType) !== null && _a !== void 0 ? _a : ClaimType.GTE;\n            claimRequest.extraData = (_b = claimRequest.extraData) !== null && _b !== void 0 ? _b : '';\n            claimRequest.groupTimestamp = (_c = claimRequest.groupTimestamp) !== null && _c !== void 0 ? _c : 'latest';\n            claimRequest.value = (_d = claimRequest.value) !== null && _d !== void 0 ? _d : 1;\n        }\n        return claims;\n    };\n    RequestBuilder.buildSignature = function (signature) {\n        var _a, _b;\n        if (!signature) {\n            return null;\n        }\n        if (typeof signature.message === undefined) {\n            throw new Error('you must provide a message');\n        }\n        signature.isSelectableByUser = (_a = signature.isSelectableByUser) !== null && _a !== void 0 ? _a : false;\n        signature.extraData = (_b = signature.extraData) !== null && _b !== void 0 ? _b : '';\n        return signature;\n    };\n    return RequestBuilder;\n}());\n\nvar getGroupFromIdQuery = \"\\n  query getGroup($id: ID!) {\\n    group(id: $id) {\\n      id\\n      name\\n      description\\n      specs\\n      generationFrequency\\n      snapshots {\\n        timestamp\\n        dataUrl\\n      }\\n    }\\n  }\\n\";\nvar getGroupFromNameQuery = \"\\n  query getGroup($name: String!) {\\n    group(name: $name) {\\n      id\\n      name\\n      description\\n      specs\\n      generationFrequency\\n      snapshots {\\n        timestamp\\n        dataUrl\\n      }\\n    }\\n  }\\n\";\n\nvar ApiFetcher = /** @class */ (function () {\n    function ApiFetcher(url) {\n        this._url = url;\n    }\n    ApiFetcher.prototype.getWithQuery = function (opts) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, fetch(this._url, {\n                            method: 'POST',\n                            headers: {\n                                'Content-Type': 'application/json',\n                            },\n                            body: JSON.stringify({\n                                query: opts.query,\n                                variables: opts.variables,\n                            }),\n                        })\n                            .then(function (res) { return res.json(); })\n                            .then(function (res) { return res.data; })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    return ApiFetcher;\n}());\n\nvar sismoApiUrls = {\n    staging: 'https://api.staging.zikies.io',\n    testnets: 'https://api.testnets.sismo.io',\n    prod: 'https://api.sismo.io',\n};\n\nvar Sdk = /** @class */ (function () {\n    function Sdk(sismoApiUrl) {\n        this._apiFetcher = new ApiFetcher(sismoApiUrl !== null && sismoApiUrl !== void 0 ? sismoApiUrl : sismoApiUrls.prod);\n    }\n    Sdk.prototype.getGroup = function (_a) {\n        var id = _a.id, name = _a.name, timestamp = _a.timestamp;\n        return __awaiter(this, void 0, void 0, function () {\n            var group, _b, dataUrl, snapshot, data;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        if (!id && !name) {\n                            throw new Error('Either id or name must be provided for the group. You can view all groups at https://factory.sismo.io/groups-explorer.');\n                        }\n                        if (!id) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this._apiFetcher.getWithQuery({\n                                query: getGroupFromIdQuery,\n                                variables: { id: id },\n                            })];\n                    case 1:\n                        _b = (_c.sent()).group;\n                        return [3 /*break*/, 4];\n                    case 2: return [4 /*yield*/, this._apiFetcher.getWithQuery({\n                            query: getGroupFromNameQuery,\n                            variables: { name: name },\n                        })];\n                    case 3:\n                        _b = (_c.sent()).group;\n                        _c.label = 4;\n                    case 4:\n                        group = _b;\n                        if (timestamp) {\n                            snapshot = group.snapshots.filter(function (s) { return s.timestamp === timestamp; })[0];\n                            (dataUrl = snapshot.dataUrl);\n                            if (!snapshot) {\n                                (dataUrl = group.snapshots[0].dataUrl);\n                            }\n                        }\n                        else {\n                            (dataUrl = group.snapshots[0].dataUrl);\n                        }\n                        return [4 /*yield*/, fetch(dataUrl).then(function (res) { return res.json(); })];\n                    case 5:\n                        data = _c.sent();\n                        return [2 /*return*/, __assign(__assign({}, group), { data: data })];\n                }\n            });\n        });\n    };\n    return Sdk;\n}());\n\nvar MAIN_VAULT_APP_BASE_URL = \"https://vault-beta.sismo.io\";\nvar IMPERSONATION_VAULT_APP_BASE_URL = \"https://vault-beta.sismo.io\";\n\nvar unCompressResponse = function (data) {\n    return (0,pako__WEBPACK_IMPORTED_MODULE_1__.ungzip)((0,js_base64__WEBPACK_IMPORTED_MODULE_2__.toUint8Array)(data), { to: 'string' });\n};\n\nvar toBytes16 = function (data) {\n    if ((0,viem__WEBPACK_IMPORTED_MODULE_3__.isHex)(data))\n        return (0,viem__WEBPACK_IMPORTED_MODULE_3__.pad)(data, { size: 16 });\n    else\n        return (0,viem__WEBPACK_IMPORTED_MODULE_3__.sliceHex)((0,viem__WEBPACK_IMPORTED_MODULE_3__.keccak256)(hexlify(data)), 0, 16);\n};\nvar toBytes32 = function (data) {\n    return (0,viem__WEBPACK_IMPORTED_MODULE_3__.pad)(hexlify(data), { size: 32, dir: 'right' });\n};\nvar toBytes = function (data) {\n    return (0,viem__WEBPACK_IMPORTED_MODULE_3__.toHex)((0,viem__WEBPACK_IMPORTED_MODULE_3__.toBytes)(data));\n};\nvar hexlify = function (data) {\n    return (0,viem__WEBPACK_IMPORTED_MODULE_3__.isHex)(data) ? data : (0,viem__WEBPACK_IMPORTED_MODULE_3__.toHex)(data);\n};\nvar formatResponseToEncode = function (sismoConnectResponse) {\n    var _a, _b, _c;\n    return {\n        appId: toBytes16(sismoConnectResponse.appId),\n        namespace: toBytes16((_a = sismoConnectResponse === null || sismoConnectResponse === void 0 ? void 0 : sismoConnectResponse.namespace) !== null && _a !== void 0 ? _a : 'main'),\n        version: toBytes32(sismoConnectResponse.version),\n        signedMessage: (_b = sismoConnectResponse.signedMessage) !== null && _b !== void 0 ? _b : toBytes('0x0000000000000000000000000000000000000000000000000000000000000000'),\n        proofs: (_c = sismoConnectResponse.proofs) === null || _c === void 0 ? void 0 : _c.map(function (proof) {\n            var _a, _b, _c, _d, _e, _f;\n            return {\n                claims: (_b = (_a = proof.claims) === null || _a === void 0 ? void 0 : _a.map(function (claim) {\n                    var _a, _b, _c, _d, _e, _f, _g;\n                    return {\n                        groupId: toBytes16((_a = claim.groupId) !== null && _a !== void 0 ? _a : '0x00'),\n                        groupTimestamp: !((_b = proof === null || proof === void 0 ? void 0 : proof.claims[0]) === null || _b === void 0 ? void 0 : _b.groupTimestamp) ||\n                            ((_c = proof === null || proof === void 0 ? void 0 : proof.claims[0]) === null || _c === void 0 ? void 0 : _c.groupTimestamp) === 'latest'\n                            ? (0,viem__WEBPACK_IMPORTED_MODULE_3__.pad)(hexlify('latest'), { size: 16, dir: 'right' })\n                            : toBytes((_d = proof === null || proof === void 0 ? void 0 : proof.claims[0]) === null || _d === void 0 ? void 0 : _d.groupTimestamp),\n                        claimType: claim.claimType,\n                        isSelectableByUser: (_e = claim === null || claim === void 0 ? void 0 : claim.isSelectableByUser) !== null && _e !== void 0 ? _e : false,\n                        value: BigInt((_f = claim.value) !== null && _f !== void 0 ? _f : 1),\n                        extraData: toBytes((_g = claim.extraData) !== null && _g !== void 0 ? _g : ''),\n                    };\n                })) !== null && _b !== void 0 ? _b : [],\n                auths: (_d = (_c = proof.auths) === null || _c === void 0 ? void 0 : _c.map(function (auth) {\n                    var _a, _b, _c, _d;\n                    return {\n                        authType: auth === null || auth === void 0 ? void 0 : auth.authType,\n                        isAnon: (_a = auth === null || auth === void 0 ? void 0 : auth.isAnon) !== null && _a !== void 0 ? _a : false,\n                        isSelectableByUser: (_b = auth === null || auth === void 0 ? void 0 : auth.isSelectableByUser) !== null && _b !== void 0 ? _b : false,\n                        userId: BigInt((_c = auth === null || auth === void 0 ? void 0 : auth.userId) !== null && _c !== void 0 ? _c : 0),\n                        extraData: toBytes((_d = auth.extraData) !== null && _d !== void 0 ? _d : ''),\n                    };\n                })) !== null && _d !== void 0 ? _d : [],\n                proofData: proof.proofData,\n                provingScheme: toBytes32((_e = proof === null || proof === void 0 ? void 0 : proof.provingScheme) !== null && _e !== void 0 ? _e : 'hydra-s3.1'),\n                extraData: toBytes((_f = proof.extraData) !== null && _f !== void 0 ? _f : ''),\n            };\n        }),\n    };\n};\nvar toSismoConnectResponseBytes = function (sismoConnectResponse) {\n    if (!sismoConnectResponse)\n        return null;\n    return (0,viem__WEBPACK_IMPORTED_MODULE_3__.encodeAbiParameters)([\n        {\n            components: [\n                {\n                    internalType: 'bytes16',\n                    name: 'appId',\n                    type: 'bytes16',\n                },\n                {\n                    internalType: 'bytes16',\n                    name: 'namespace',\n                    type: 'bytes16',\n                },\n                {\n                    internalType: 'bytes32',\n                    name: 'version',\n                    type: 'bytes32',\n                },\n                {\n                    internalType: 'bytes',\n                    name: 'signedMessage',\n                    type: 'bytes',\n                },\n                {\n                    components: [\n                        {\n                            components: [\n                                {\n                                    internalType: 'enum AuthType',\n                                    name: 'authType',\n                                    type: 'uint8',\n                                },\n                                {\n                                    internalType: 'bool',\n                                    name: 'isAnon',\n                                    type: 'bool',\n                                },\n                                {\n                                    internalType: 'bool',\n                                    name: 'isSelectableByUser',\n                                    type: 'bool',\n                                },\n                                {\n                                    internalType: 'uint256',\n                                    name: 'userId',\n                                    type: 'uint256',\n                                },\n                                {\n                                    internalType: 'bytes',\n                                    name: 'extraData',\n                                    type: 'bytes',\n                                },\n                            ],\n                            internalType: 'struct Auth[]',\n                            name: 'auths',\n                            type: 'tuple[]',\n                        },\n                        {\n                            components: [\n                                {\n                                    internalType: 'enum ClaimType',\n                                    name: 'claimType',\n                                    type: 'uint8',\n                                },\n                                {\n                                    internalType: 'bytes16',\n                                    name: 'groupId',\n                                    type: 'bytes16',\n                                },\n                                {\n                                    internalType: 'bytes16',\n                                    name: 'groupTimestamp',\n                                    type: 'bytes16',\n                                },\n                                {\n                                    internalType: 'bool',\n                                    name: 'isSelectableByUser',\n                                    type: 'bool',\n                                },\n                                {\n                                    internalType: 'uint256',\n                                    name: 'value',\n                                    type: 'uint256',\n                                },\n                                {\n                                    internalType: 'bytes',\n                                    name: 'extraData',\n                                    type: 'bytes',\n                                },\n                            ],\n                            internalType: 'struct Claim[]',\n                            name: 'claims',\n                            type: 'tuple[]',\n                        },\n                        {\n                            internalType: 'bytes32',\n                            name: 'provingScheme',\n                            type: 'bytes32',\n                        },\n                        {\n                            internalType: 'bytes',\n                            name: 'proofData',\n                            type: 'bytes',\n                        },\n                        {\n                            internalType: 'bytes',\n                            name: 'extraData',\n                            type: 'bytes',\n                        },\n                    ],\n                    internalType: 'struct SismoConnectProof[]',\n                    name: 'proofs',\n                    type: 'tuple[]',\n                },\n            ],\n            internalType: 'struct SismoConnectResponse',\n            name: 'response',\n            type: 'tuple',\n        },\n    ], [formatResponseToEncode(sismoConnectResponse)]);\n};\n\nvar SismoConnect = function (_a) {\n    var config = _a.config;\n    return new SismoConnectClient({ config: config });\n};\nvar SismoConnectClient = /** @class */ (function () {\n    function SismoConnectClient(_a) {\n        var config = _a.config;\n        var _this = this;\n        var _b, _c, _d;\n        this.request = function (_a) {\n            var claims = _a.claims, claim = _a.claim, auths = _a.auths, auth = _a.auth, signature = _a.signature, namespace = _a.namespace, callbackPath = _a.callbackPath, callbackUrl = _a.callbackUrl;\n            if (!window)\n                throw new Error(\"requestProof is not available outside of a browser\");\n            if (!callbackUrl) {\n                callbackUrl = window.location.origin + window.location.pathname;\n            }\n            var url = _this.getRequestLink({\n                claims: claims,\n                claim: claim,\n                auths: auths,\n                auth: auth,\n                signature: signature,\n                namespace: namespace,\n                callbackPath: callbackPath,\n                callbackUrl: callbackUrl,\n            });\n            window.location.href = encodeURI(url);\n        };\n        this.getRequestLink = function (_a) {\n            var _b, _c;\n            var claims = _a.claims, claim = _a.claim, auths = _a.auths, auth = _a.auth, signature = _a.signature, namespace = _a.namespace, callbackPath = _a.callbackPath, callbackUrl = _a.callbackUrl;\n            if (!claims && !auths && !signature && !claim && !auth) {\n                throw new Error(\"claims or auths or signature is required\");\n            }\n            if (auths && auth) {\n                throw new Error(\"You can't use both auth and auths\");\n            }\n            if (claims && claim) {\n                throw new Error(\"You can't use both claim and claims\");\n            }\n            var url = \"\".concat(_this._sismoConnectConfig.vaultAppBaseUrl, \"/connect?version=\").concat(SISMO_CONNECT_VERSION, \"&appId=\").concat(_this._sismoConnectConfig.appId);\n            if (claims) {\n                url += \"&claims=\".concat(JSON.stringify(RequestBuilder.buildClaims(claims)));\n            }\n            if (claim) {\n                url += \"&claims=\".concat(JSON.stringify(RequestBuilder.buildClaims(claim)));\n            }\n            if (auths) {\n                url += \"&auths=\".concat(JSON.stringify(RequestBuilder.buildAuths(auths)));\n            }\n            if (auth) {\n                url += \"&auths=\".concat(JSON.stringify(RequestBuilder.buildAuths(auth)));\n            }\n            if (signature) {\n                signature = RequestBuilder.buildSignature(signature);\n                url += \"&signature=\".concat(JSON.stringify(signature));\n            }\n            if (((_c = (_b = _this._sismoConnectConfig.vault) === null || _b === void 0 ? void 0 : _b.impersonate) === null || _c === void 0 ? void 0 : _c.length) > 0) {\n                url += \"&vault=\".concat(JSON.stringify(_this._sismoConnectConfig.vault));\n            }\n            if (_this._sismoConnectConfig.displayRawResponse) {\n                url += \"&displayRawResponse=true\";\n            }\n            if (callbackPath) {\n                url += \"&callbackPath=\".concat(callbackPath);\n            }\n            if (namespace) {\n                url += \"&namespace=\".concat(namespace);\n            }\n            if (callbackUrl) {\n                url += \"&callbackUrl=\".concat(callbackUrl);\n            }\n            url += \"&compressed=true\";\n            return url;\n        };\n        this.getResponse = function () {\n            if (!window)\n                throw new Error(\"getResponse is not available outside of a browser\");\n            var url = new URL(window.location.href);\n            if (url.searchParams.has('sismoConnectResponseCompressed')) {\n                var compressedResponse = url.searchParams.get('sismoConnectResponseCompressed');\n                var uncompressedResponse = unCompressResponse(compressedResponse);\n                return JSON.parse(uncompressedResponse);\n            }\n            return null;\n        };\n        this.getResponseBytes = function () {\n            if (!window)\n                throw new Error(\"getResponse is not available outside of a browser\");\n            var url = new URL(window.location.href);\n            if (url.searchParams.has('sismoConnectResponseCompressed')) {\n                var compressedResponse = url.searchParams.get('sismoConnectResponseCompressed');\n                var uncompressedResponse = unCompressResponse(compressedResponse);\n                var sismoConnectResponse = JSON.parse(uncompressedResponse);\n                return toSismoConnectResponseBytes(sismoConnectResponse);\n            }\n            return null;\n        };\n        if (!config) {\n            throw new Error('No SismoConnect config provided.');\n        }\n        config.vault = (_b = config.vault) !== null && _b !== void 0 ? _b : { impersonate: [] };\n        this._sismoConnectConfig = config;\n        var isImpersonationMode = ((_d = (_c = this._sismoConnectConfig.vault) === null || _c === void 0 ? void 0 : _c.impersonate) === null || _d === void 0 ? void 0 : _d.length) > 0;\n        if (!this._sismoConnectConfig.vaultAppBaseUrl) {\n            if (isImpersonationMode) {\n                this._sismoConnectConfig.vaultAppBaseUrl =\n                    IMPERSONATION_VAULT_APP_BASE_URL;\n            }\n            else {\n                this._sismoConnectConfig.vaultAppBaseUrl = MAIN_VAULT_APP_BASE_URL;\n            }\n        }\n        if (!this._sismoConnectConfig.displayRawResponse) {\n            this._sismoConnectConfig.displayRawResponse = false;\n        }\n        if (this._sismoConnectConfig.displayRawResponse) {\n            console.warn('Sismo Connect displayRawResponse is true. Never use this mode in production!');\n        }\n        if (isImpersonationMode) {\n            console.warn(\"Sismo Connect redirects to the Impersonation Vault. The generated proofs are based on impersonated accounts: \".concat(this._sismoConnectConfig.vault.impersonate, \". Never use this mode in production!\"));\n        }\n        this._sdk = new Sdk(this._sismoConnectConfig.sismoApiUrl);\n    }\n    SismoConnectClient.prototype.getGroup = function (_a) {\n        var id = _a.id, name = _a.name, timestamp = _a.timestamp;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_b) {\n                return [2 /*return*/, this._sdk.getGroup({ id: id, name: name, timestamp: timestamp })];\n            });\n        });\n    };\n    return SismoConnectClient;\n}());\n\n// ABI of all the errors that can be thrown by the contract inheriting Sismo Connect\nvar sismoConnectErrorsABI = [\n    {\n        // SismoConnectVerifier errors\n        inputs: [\n            {\n                internalType: 'bytes16',\n                name: 'receivedAppId',\n                type: 'bytes16',\n            },\n            {\n                internalType: 'bytes16',\n                name: 'expectedAppId',\n                type: 'bytes16',\n            },\n        ],\n        name: 'AppIdMismatch',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'bytes16',\n                name: 'receivedNamespace',\n                type: 'bytes16',\n            },\n            {\n                internalType: 'bytes16',\n                name: 'expectedNamespace',\n                type: 'bytes16',\n            },\n        ],\n        name: 'NamespaceMismatch',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'bytes32',\n                name: 'requestVersion',\n                type: 'bytes32',\n            },\n            {\n                internalType: 'bytes32',\n                name: 'responseVersion',\n                type: 'bytes32',\n            },\n        ],\n        name: 'VersionMismatch',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'bytes',\n                name: 'requestMessageSignature',\n                type: 'bytes',\n            },\n            {\n                internalType: 'bytes',\n                name: 'responseMessageSignature',\n                type: 'bytes',\n            },\n        ],\n        type: 'error',\n        name: 'SignatureMessageMismatch',\n    },\n    // HydraS2Verifier errors\n    {\n        inputs: [\n            {\n                internalType: 'uint256',\n                name: 'claimTypeFromProof',\n                type: 'uint256',\n            },\n            {\n                internalType: 'uint256',\n                name: 'expectedClaimType',\n                type: 'uint256',\n            },\n        ],\n        name: 'ClaimTypeMismatch',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'uint256',\n                name: 'claimTypeFromProof',\n                type: 'uint256',\n            },\n            {\n                internalType: 'uint256',\n                name: 'expectedClaimType',\n                type: 'uint256',\n            },\n        ],\n        name: 'ClaimTypeMismatch',\n        type: 'error',\n    },\n    {\n        inputs: [],\n        name: 'ClaimValueMismatch',\n        type: 'error',\n    },\n    {\n        inputs: [],\n        name: 'OnlyOneAuthAndOneClaimIsSupported',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'bytes32',\n                name: 'version',\n                type: 'bytes32',\n            },\n        ],\n        name: 'InvalidVersion',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'uint256',\n                name: 'userIdFromProof',\n                type: 'uint256',\n            },\n            {\n                internalType: 'uint256',\n                name: 'expectedUserId',\n                type: 'uint256',\n            },\n        ],\n        name: 'UserIdMismatch',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'uint256',\n                name: 'inputRoot',\n                type: 'uint256',\n            },\n        ],\n        name: 'RegistryRootNotAvailable',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'uint256',\n                name: 'vaultNamespaceFromProof',\n                type: 'uint256',\n            },\n            {\n                internalType: 'uint256',\n                name: 'expectedVaultNamespace',\n                type: 'uint256',\n            },\n        ],\n        name: 'VaultNamespaceMismatch',\n        type: 'error',\n    },\n    {\n        inputs: [],\n        name: 'DestinationVerificationNotEnabled',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'uint256',\n                name: 'extraDataFromProof',\n                type: 'uint256',\n            },\n            {\n                internalType: 'uint256',\n                name: 'expectedExtraData',\n                type: 'uint256',\n            },\n        ],\n        name: 'InvalidExtraData',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'uint256',\n                name: 'requestIdentifierFromProof',\n                type: 'uint256',\n            },\n            {\n                internalType: 'uint256',\n                name: 'expectedRequestIdentifier',\n                type: 'uint256',\n            },\n        ],\n        name: 'RequestIdentifierMismatch',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'bytes32',\n                name: 'expectedX',\n                type: 'bytes32',\n            },\n            {\n                internalType: 'bytes32',\n                name: 'expectedY',\n                type: 'bytes32',\n            },\n            {\n                internalType: 'bytes32',\n                name: 'inputX',\n                type: 'bytes32',\n            },\n            {\n                internalType: 'bytes32',\n                name: 'inputY',\n                type: 'bytes32',\n            },\n        ],\n        name: 'CommitmentMapperPubKeyMismatch',\n        type: 'error',\n    },\n    {\n        inputs: [],\n        name: 'SourceVerificationNotEnabled',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address',\n                name: 'destinationFromProof',\n                type: 'address',\n            },\n            {\n                internalType: 'address',\n                name: 'expectedDestination',\n                type: 'address',\n            },\n        ],\n        name: 'DestinationMismatch',\n        type: 'error',\n    },\n    {\n        inputs: [],\n        name: 'InvalidProof',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'uint256',\n                name: 'accountsTreeValueFromProof',\n                type: 'uint256',\n            },\n            {\n                internalType: 'uint256',\n                name: 'expectedAccountsTreeValue',\n                type: 'uint256',\n            },\n        ],\n        name: 'AccountsTreeValueMismatch',\n        type: 'error',\n    },\n    // ClaimMatching errors\n    {\n        inputs: [\n            {\n                internalType: 'bytes16',\n                name: 'requestClaimGroupId',\n                type: 'bytes16',\n            },\n            {\n                internalType: 'bytes16',\n                name: 'requestClaimGroupTimestamp',\n                type: 'bytes16',\n            },\n        ],\n        name: 'ClaimGroupIdAndGroupTimestampNotFound',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'bytes16',\n                name: 'requestClaimGroupId',\n                type: 'bytes16',\n            },\n        ],\n        name: 'ClaimGroupIdNotFound',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'bytes16',\n                name: 'requestClaimGroupTimestamp',\n                type: 'bytes16',\n            },\n        ],\n        name: 'ClaimGroupTimestampNotFound',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'uint8',\n                name: 'responseClaimType',\n                type: 'uint8',\n            },\n            {\n                internalType: 'bytes16',\n                name: 'responseClaimGroupId',\n                type: 'bytes16',\n            },\n            {\n                internalType: 'bytes16',\n                name: 'responseClaimGroupTimestamp',\n                type: 'bytes16',\n            },\n            {\n                internalType: 'uint256',\n                name: 'responseClaimValue',\n                type: 'uint256',\n            },\n            {\n                internalType: 'bytes',\n                name: 'responseExtraData',\n                type: 'bytes',\n            },\n        ],\n        name: 'ClaimInRequestNotFoundInResponse',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'uint8',\n                name: 'requestClaimType',\n                type: 'uint8',\n            },\n            {\n                internalType: 'bytes16',\n                name: 'requestClaimGroupId',\n                type: 'bytes16',\n            },\n        ],\n        name: 'ClaimTypeAndGroupIdNotFound',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'uint8',\n                name: 'requestClaimType',\n                type: 'uint8',\n            },\n            {\n                internalType: 'bytes16',\n                name: 'requestClaimGroupTimestamp',\n                type: 'bytes16',\n            },\n        ],\n        name: 'ClaimTypeAndGroupTimestampNotFound',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'uint8',\n                name: 'requestClaimType',\n                type: 'uint8',\n            },\n        ],\n        name: 'ClaimTypeNotFound',\n        type: 'error',\n    },\n    // AuthMatchingLib errors\n    {\n        inputs: [\n            {\n                internalType: 'uint8',\n                name: 'requestAuthType',\n                type: 'uint8',\n            },\n            {\n                internalType: 'bool',\n                name: 'requestIsAnon',\n                type: 'bool',\n            },\n            {\n                internalType: 'uint256',\n                name: 'requestUserId',\n                type: 'uint256',\n            },\n            {\n                internalType: 'bytes',\n                name: 'requestExtraData',\n                type: 'bytes',\n            },\n        ],\n        name: 'AuthInRequestNotFoundInResponse',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'bool',\n                name: 'requestIsAnon',\n                type: 'bool',\n            },\n            {\n                internalType: 'uint256',\n                name: 'requestUserId',\n                type: 'uint256',\n            },\n        ],\n        name: 'AuthIsAnonAndUserIdNotFound',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'bool',\n                name: 'requestIsAnon',\n                type: 'bool',\n            },\n        ],\n        name: 'AuthIsAnonNotFound',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'uint8',\n                name: 'requestAuthType',\n                type: 'uint8',\n            },\n            {\n                internalType: 'bool',\n                name: 'requestIsAnon',\n                type: 'bool',\n            },\n        ],\n        name: 'AuthTypeAndIsAnonNotFound',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'uint8',\n                name: 'requestAuthType',\n                type: 'uint8',\n            },\n            {\n                internalType: 'uint256',\n                name: 'requestUserId',\n                type: 'uint256',\n            },\n        ],\n        name: 'AuthTypeAndUserIdNotFound',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'uint8',\n                name: 'requestAuthType',\n                type: 'uint8',\n            },\n        ],\n        name: 'AuthTypeNotFound',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'uint256',\n                name: 'requestUserId',\n                type: 'uint256',\n            },\n        ],\n        name: 'AuthUserIdNotFound',\n        type: 'error',\n    },\n];\n\nvar useSismoConnect = function (_a) {\n    var config = _a.config;\n    var _b = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null), response = _b[0], setResponse = _b[1];\n    var _c = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null), responseBytes = _c[0], setResponseBytes = _c[1];\n    var sismoConnect = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () { return SismoConnect({ config: config }); }, [config]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n        if (!sismoConnect)\n            return;\n        var sismoConnectResponse = sismoConnect.getResponse();\n        var sismoConnectResponseBytes = sismoConnect.getResponseBytes();\n        if (sismoConnectResponse)\n            setResponse(sismoConnectResponse);\n        if (sismoConnectResponseBytes)\n            setResponseBytes(sismoConnectResponseBytes);\n    }, [sismoConnect]);\n    return {\n        response: response,\n        responseBytes: responseBytes,\n        sismoConnect: sismoConnect,\n    };\n};\n\nvar SismoConnectButton = function (_a) {\n    var claims = _a.claims, claim = _a.claim, auths = _a.auths, auth = _a.auth, signature = _a.signature, onResponse = _a.onResponse, onResponseBytes = _a.onResponseBytes, config = _a.config, \n    // [Deprecated]\n    callbackPath = _a.callbackPath, callbackUrl = _a.callbackUrl, namespace = _a.namespace, \n    // [Deprecated]\n    verifying = _a.verifying, text = _a.text, loading = _a.loading, overrideStyle = _a.overrideStyle;\n    if (!claims && !auths && !signature && !claim && !auth) {\n        throw new Error(\"Please specify at least one claimRequest or authRequest or signatureRequest\");\n    }\n    if (claim && claims) {\n        throw new Error(\"You can't use both claim and claims props\");\n    }\n    if (auth && auths) {\n        throw new Error(\"You can't use both auth and auths props\");\n    }\n    var _b = useSismoConnect({\n        config: config\n    }), sismoConnect = _b.sismoConnect, response = _b.response, responseBytes = _b.responseBytes;\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n        if (!response || !onResponse)\n            return;\n        onResponse(response);\n    }, [response]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n        if (!responseBytes || !onResponseBytes)\n            return;\n        onResponseBytes(responseBytes);\n    }, [responseBytes]);\n    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", { className: \"sismoConnectButton\", style: __assign$1({ cursor: verifying || loading ? \"default\" : \"cursor\" }, overrideStyle), onClick: function () {\n            if (verifying || loading)\n                return;\n            sismoConnect.request({\n                claims: claims,\n                auths: auths,\n                claim: claim,\n                auth: auth,\n                signature: signature,\n                callbackPath: callbackPath,\n                callbackUrl: callbackUrl,\n                namespace: namespace\n            });\n        } },\n        verifying || loading ?\n            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Loader, null)\n            :\n                react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { className: \"sismoConnectButtonLogo\" },\n                    react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Logo, null)),\n        react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { className: \"sismoConnectButtonText\" }, text || \"Sign in with Sismo\")));\n};\n\n\n//# sourceMappingURL=index.js.map\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sismo-core/sismo-connect-react/lib/esm/index.js\n");

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-route-loader/helpers.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/helpers.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"hoist\", ({\n    enumerable: true,\n    get: function() {\n        return hoist;\n    }\n}));\nfunction hoist(module, name) {\n    // If the name is available in the module, return it.\n    if (name in module) {\n        return module[name];\n    }\n    // If a property called `then` exists, assume it's a promise and\n    // return a promise that resolves to the name.\n    if (\"then\" in module && typeof module.then === \"function\") {\n        return module.then((mod)=>hoist(mod, name));\n    }\n    // If we're trying to hoise the default export, and the module is a function,\n    // return the module itself.\n    if (typeof module === \"function\" && name === \"default\") {\n        return module;\n    }\n    // Otherwise, return undefined.\n    return undefined;\n}\n\n//# sourceMappingURL=helpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9oZWxwZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQWlCO0FBQ2pCLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLHlDQUF3QztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsRUFBQztBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3VzZXItcHJvb2YtbWVtYmVyc2hpcC8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtcm91dGUtbG9hZGVyL2hlbHBlcnMuanM/OTlmZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEhvaXN0cyBhIG5hbWUgZnJvbSBhIG1vZHVsZSBvciBwcm9taXNlZCBtb2R1bGUuXG4gKlxuICogQHBhcmFtIG1vZHVsZSB0aGUgbW9kdWxlIHRvIGhvaXN0IHRoZSBuYW1lIGZyb21cbiAqIEBwYXJhbSBuYW1lIHRoZSBuYW1lIHRvIGhvaXN0XG4gKiBAcmV0dXJucyB0aGUgdmFsdWUgb24gdGhlIG1vZHVsZSAob3IgcHJvbWlzZWQgbW9kdWxlKVxuICovIFwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaG9pc3RcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGhvaXN0O1xuICAgIH1cbn0pO1xuZnVuY3Rpb24gaG9pc3QobW9kdWxlLCBuYW1lKSB7XG4gICAgLy8gSWYgdGhlIG5hbWUgaXMgYXZhaWxhYmxlIGluIHRoZSBtb2R1bGUsIHJldHVybiBpdC5cbiAgICBpZiAobmFtZSBpbiBtb2R1bGUpIHtcbiAgICAgICAgcmV0dXJuIG1vZHVsZVtuYW1lXTtcbiAgICB9XG4gICAgLy8gSWYgYSBwcm9wZXJ0eSBjYWxsZWQgYHRoZW5gIGV4aXN0cywgYXNzdW1lIGl0J3MgYSBwcm9taXNlIGFuZFxuICAgIC8vIHJldHVybiBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB0byB0aGUgbmFtZS5cbiAgICBpZiAoXCJ0aGVuXCIgaW4gbW9kdWxlICYmIHR5cGVvZiBtb2R1bGUudGhlbiA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHJldHVybiBtb2R1bGUudGhlbigobW9kKT0+aG9pc3QobW9kLCBuYW1lKSk7XG4gICAgfVxuICAgIC8vIElmIHdlJ3JlIHRyeWluZyB0byBob2lzZSB0aGUgZGVmYXVsdCBleHBvcnQsIGFuZCB0aGUgbW9kdWxlIGlzIGEgZnVuY3Rpb24sXG4gICAgLy8gcmV0dXJuIHRoZSBtb2R1bGUgaXRzZWxmLlxuICAgIGlmICh0eXBlb2YgbW9kdWxlID09PSBcImZ1bmN0aW9uXCIgJiYgbmFtZSA9PT0gXCJkZWZhdWx0XCIpIHtcbiAgICAgICAgcmV0dXJuIG1vZHVsZTtcbiAgICB9XG4gICAgLy8gT3RoZXJ3aXNlLCByZXR1cm4gdW5kZWZpbmVkLlxuICAgIHJldHVybiB1bmRlZmluZWQ7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhlbHBlcnMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-route-loader/helpers.js\n");

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?page=%2F&absolutePagePath=.%2Fsrc%2Fpages%2Findex.tsx&preferredRegion=&middlewareConfig=e30%3D!":
/*!*********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?page=%2F&absolutePagePath=.%2Fsrc%2Fpages%2Findex.tsx&preferredRegion=&middlewareConfig=e30%3D! ***!
  \*********************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getServerSideProps: () => (/* binding */ getServerSideProps),\n/* harmony export */   getStaticPaths: () => (/* binding */ getStaticPaths),\n/* harmony export */   getStaticProps: () => (/* binding */ getStaticProps),\n/* harmony export */   reportWebVitals: () => (/* binding */ reportWebVitals),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   unstable_getServerProps: () => (/* binding */ unstable_getServerProps),\n/* harmony export */   unstable_getServerSideProps: () => (/* binding */ unstable_getServerSideProps),\n/* harmony export */   unstable_getStaticParams: () => (/* binding */ unstable_getStaticParams),\n/* harmony export */   unstable_getStaticPaths: () => (/* binding */ unstable_getStaticPaths),\n/* harmony export */   unstable_getStaticProps: () => (/* binding */ unstable_getStaticProps)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages/module */ \"./node_modules/next/dist/server/future/route-modules/pages/module.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_module__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_module__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_build_webpack_loaders_next_route_loader_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/build/webpack/loaders/next-route-loader/helpers */ \"./node_modules/next/dist/build/webpack/loaders/next-route-loader/helpers.js\");\n/* harmony import */ var _src_pages_index_tsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/pages/index.tsx */ \"./src/pages/index.tsx\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_src_pages_index_tsx__WEBPACK_IMPORTED_MODULE_2__]);\n_src_pages_index_tsx__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n        // Next.js Route Loader\n        \n        \n\n        // Import the userland code.\n        \n\n        // Re-export the component (should be the default export).\n        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_webpack_loaders_next_route_loader_helpers__WEBPACK_IMPORTED_MODULE_1__.hoist)(_src_pages_index_tsx__WEBPACK_IMPORTED_MODULE_2__, \"default\"));\n\n        // Re-export methods.\n        const getStaticProps = (0,next_dist_build_webpack_loaders_next_route_loader_helpers__WEBPACK_IMPORTED_MODULE_1__.hoist)(_src_pages_index_tsx__WEBPACK_IMPORTED_MODULE_2__, \"getStaticProps\")\n        const getStaticPaths = (0,next_dist_build_webpack_loaders_next_route_loader_helpers__WEBPACK_IMPORTED_MODULE_1__.hoist)(_src_pages_index_tsx__WEBPACK_IMPORTED_MODULE_2__, \"getStaticPaths\")\n        const getServerSideProps = (0,next_dist_build_webpack_loaders_next_route_loader_helpers__WEBPACK_IMPORTED_MODULE_1__.hoist)(_src_pages_index_tsx__WEBPACK_IMPORTED_MODULE_2__, \"getServerSideProps\")\n        const config = (0,next_dist_build_webpack_loaders_next_route_loader_helpers__WEBPACK_IMPORTED_MODULE_1__.hoist)(_src_pages_index_tsx__WEBPACK_IMPORTED_MODULE_2__, \"config\")\n        const reportWebVitals = (0,next_dist_build_webpack_loaders_next_route_loader_helpers__WEBPACK_IMPORTED_MODULE_1__.hoist)(_src_pages_index_tsx__WEBPACK_IMPORTED_MODULE_2__, \"reportWebVitals\")\n\n        // Re-export legacy methods.\n        const unstable_getStaticProps = (0,next_dist_build_webpack_loaders_next_route_loader_helpers__WEBPACK_IMPORTED_MODULE_1__.hoist)(_src_pages_index_tsx__WEBPACK_IMPORTED_MODULE_2__, \"unstable_getStaticProps\")\n        const unstable_getStaticPaths = (0,next_dist_build_webpack_loaders_next_route_loader_helpers__WEBPACK_IMPORTED_MODULE_1__.hoist)(_src_pages_index_tsx__WEBPACK_IMPORTED_MODULE_2__, \"unstable_getStaticPaths\")\n        const unstable_getStaticParams = (0,next_dist_build_webpack_loaders_next_route_loader_helpers__WEBPACK_IMPORTED_MODULE_1__.hoist)(_src_pages_index_tsx__WEBPACK_IMPORTED_MODULE_2__, \"unstable_getStaticParams\")\n        const unstable_getServerProps = (0,next_dist_build_webpack_loaders_next_route_loader_helpers__WEBPACK_IMPORTED_MODULE_1__.hoist)(_src_pages_index_tsx__WEBPACK_IMPORTED_MODULE_2__, \"unstable_getServerProps\")\n        const unstable_getServerSideProps = (0,next_dist_build_webpack_loaders_next_route_loader_helpers__WEBPACK_IMPORTED_MODULE_1__.hoist)(_src_pages_index_tsx__WEBPACK_IMPORTED_MODULE_2__, \"unstable_getServerSideProps\")\n\n        // Create and export the route module that will be consumed.\n        const options = {\"definition\":{\"kind\":\"PAGES\",\"page\":\"/index\",\"pathname\":\"/\",\"bundlePath\":\"\",\"filename\":\"\"}}\n        const routeModule = new (next_dist_server_future_route_modules_pages_module__WEBPACK_IMPORTED_MODULE_0___default())({ ...options, userland: _src_pages_index_tsx__WEBPACK_IMPORTED_MODULE_2__ })\n        \n        \n    \n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9wYWdlPSUyRiZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZzcmMlMkZwYWdlcyUyRmluZGV4LnRzeCZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBO0FBQ0EsUUFBb0Y7QUFDcEYsUUFBeUY7O0FBRXpGO0FBQ0EsUUFBeUQ7O0FBRXpEO0FBQ0EsUUFBUSxpRUFBZSxnR0FBSyxDQUFDLGlEQUFRLFlBQVk7O0FBRWpEO0FBQ0EsUUFBZSx1QkFBdUIsZ0dBQUssQ0FBQyxpREFBUTtBQUNwRCxRQUFlLHVCQUF1QixnR0FBSyxDQUFDLGlEQUFRO0FBQ3BELFFBQWUsMkJBQTJCLGdHQUFLLENBQUMsaURBQVE7QUFDeEQsUUFBZSxlQUFlLGdHQUFLLENBQUMsaURBQVE7QUFDNUMsUUFBZSx3QkFBd0IsZ0dBQUssQ0FBQyxpREFBUTs7QUFFckQ7QUFDQSxRQUFlLGdDQUFnQyxnR0FBSyxDQUFDLGlEQUFRO0FBQzdELFFBQWUsZ0NBQWdDLGdHQUFLLENBQUMsaURBQVE7QUFDN0QsUUFBZSxpQ0FBaUMsZ0dBQUssQ0FBQyxpREFBUTtBQUM5RCxRQUFlLGdDQUFnQyxnR0FBSyxDQUFDLGlEQUFRO0FBQzdELFFBQWUsb0NBQW9DLGdHQUFLLENBQUMsaURBQVE7O0FBRWpFO0FBQ0EseUJBQXlCLGNBQWM7QUFDdkMsZ0NBQWdDLDJGQUFXLEdBQUcsb0JBQW9CLHFEQUFFO0FBQ3BFO0FBQ0EsUUFBOEI7QUFDOUIsSSIsInNvdXJjZXMiOlsid2VicGFjazovL3VzZXItcHJvb2YtbWVtYmVyc2hpcC8/NTk2MiJdLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICAgICAgLy8gTmV4dC5qcyBSb3V0ZSBMb2FkZXJcbiAgICAgICAgaW1wb3J0IFJvdXRlTW9kdWxlIGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzL21vZHVsZVwiXG4gICAgICAgIGltcG9ydCB7IGhvaXN0IH0gZnJvbSBcIm5leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1yb3V0ZS1sb2FkZXIvaGVscGVyc1wiXG5cbiAgICAgICAgLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuICAgICAgICBpbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9zcmMvcGFnZXMvaW5kZXgudHN4XCJcblxuICAgICAgICAvLyBSZS1leHBvcnQgdGhlIGNvbXBvbmVudCAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG4gICAgICAgIGV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIilcblxuICAgICAgICAvLyBSZS1leHBvcnQgbWV0aG9kcy5cbiAgICAgICAgZXhwb3J0IGNvbnN0IGdldFN0YXRpY1Byb3BzID0gaG9pc3QodXNlcmxhbmQsIFwiZ2V0U3RhdGljUHJvcHNcIilcbiAgICAgICAgZXhwb3J0IGNvbnN0IGdldFN0YXRpY1BhdGhzID0gaG9pc3QodXNlcmxhbmQsIFwiZ2V0U3RhdGljUGF0aHNcIilcbiAgICAgICAgZXhwb3J0IGNvbnN0IGdldFNlcnZlclNpZGVQcm9wcyA9IGhvaXN0KHVzZXJsYW5kLCBcImdldFNlcnZlclNpZGVQcm9wc1wiKVxuICAgICAgICBleHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpXG4gICAgICAgIGV4cG9ydCBjb25zdCByZXBvcnRXZWJWaXRhbHMgPSBob2lzdCh1c2VybGFuZCwgXCJyZXBvcnRXZWJWaXRhbHNcIilcblxuICAgICAgICAvLyBSZS1leHBvcnQgbGVnYWN5IG1ldGhvZHMuXG4gICAgICAgIGV4cG9ydCBjb25zdCB1bnN0YWJsZV9nZXRTdGF0aWNQcm9wcyA9IGhvaXN0KHVzZXJsYW5kLCBcInVuc3RhYmxlX2dldFN0YXRpY1Byb3BzXCIpXG4gICAgICAgIGV4cG9ydCBjb25zdCB1bnN0YWJsZV9nZXRTdGF0aWNQYXRocyA9IGhvaXN0KHVzZXJsYW5kLCBcInVuc3RhYmxlX2dldFN0YXRpY1BhdGhzXCIpXG4gICAgICAgIGV4cG9ydCBjb25zdCB1bnN0YWJsZV9nZXRTdGF0aWNQYXJhbXMgPSBob2lzdCh1c2VybGFuZCwgXCJ1bnN0YWJsZV9nZXRTdGF0aWNQYXJhbXNcIilcbiAgICAgICAgZXhwb3J0IGNvbnN0IHVuc3RhYmxlX2dldFNlcnZlclByb3BzID0gaG9pc3QodXNlcmxhbmQsIFwidW5zdGFibGVfZ2V0U2VydmVyUHJvcHNcIilcbiAgICAgICAgZXhwb3J0IGNvbnN0IHVuc3RhYmxlX2dldFNlcnZlclNpZGVQcm9wcyA9IGhvaXN0KHVzZXJsYW5kLCBcInVuc3RhYmxlX2dldFNlcnZlclNpZGVQcm9wc1wiKVxuXG4gICAgICAgIC8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuICAgICAgICBjb25zdCBvcHRpb25zID0ge1wiZGVmaW5pdGlvblwiOntcImtpbmRcIjpcIlBBR0VTXCIsXCJwYWdlXCI6XCIvaW5kZXhcIixcInBhdGhuYW1lXCI6XCIvXCIsXCJidW5kbGVQYXRoXCI6XCJcIixcImZpbGVuYW1lXCI6XCJcIn19XG4gICAgICAgIGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFJvdXRlTW9kdWxlKHsgLi4ub3B0aW9ucywgdXNlcmxhbmQgfSlcbiAgICAgICAgXG4gICAgICAgIGV4cG9ydCB7IHJvdXRlTW9kdWxlIH1cbiAgICAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?page=%2F&absolutePagePath=.%2Fsrc%2Fpages%2Findex.tsx&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "./src/config/sismo-connect-config.tsx":
/*!*********************************************!*\
  !*** ./src/config/sismo-connect-config.tsx ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config)\n/* harmony export */ });\n// sismo-connect-config.ts\nconst config = {\n    appId: \"0xef7f9c59d297bdad9b2beb8e47f34bce\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29uZmlnL3Npc21vLWNvbm5lY3QtY29uZmlnLnRzeCIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsMEJBQTBCO0FBSW5CLE1BQU1BLFNBQTZCO0lBQ3hDQyxPQUFPO0FBQ1QsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL3VzZXItcHJvb2YtbWVtYmVyc2hpcC8uL3NyYy9jb25maWcvc2lzbW8tY29ubmVjdC1jb25maWcudHN4P2Q2NmMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc2lzbW8tY29ubmVjdC1jb25maWcudHNcblxuaW1wb3J0IHsgU2lzbW9Db25uZWN0Q29uZmlnIH0gZnJvbSBcIkBzaXNtby1jb3JlL3Npc21vLWNvbm5lY3QtcmVhY3RcIjtcblxuZXhwb3J0IGNvbnN0IGNvbmZpZzogU2lzbW9Db25uZWN0Q29uZmlnID0ge1xuICBhcHBJZDogXCIweGVmN2Y5YzU5ZDI5N2JkYWQ5YjJiZWI4ZTQ3ZjM0YmNlXCIsIC8vIHJlcGxhY2Ugd2l0aCB5b3VyIGFwcElkXG59OyJdLCJuYW1lcyI6WyJjb25maWciLCJhcHBJZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/config/sismo-connect-config.tsx\n");

/***/ }),

/***/ "./src/pages/index.tsx":
/*!*****************************!*\
  !*** ./src/pages/index.tsx ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/react */ \"@chakra-ui/react\");\n/* harmony import */ var _sismo_core_sismo_connect_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sismo-core/sismo-connect-react */ \"./node_modules/@sismo-core/sismo-connect-react/lib/esm/index.js\");\n/* harmony import */ var _config_sismo_connect_config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../config/sismo-connect-config */ \"./src/config/sismo-connect-config.tsx\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__, _sismo_core_sismo_connect_react__WEBPACK_IMPORTED_MODULE_3__]);\n([_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__, _sismo_core_sismo_connect_react__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\nfunction App() {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.ChakraProvider, {\n        theme: _chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.theme,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Box, {\n            as: \"section\",\n            bgGradient: \"linear(to-r, #363390, #00204C, #093E6F)\",\n            color: \"fg.accent.default\",\n            py: {\n                base: \"16\",\n                md: \"24\"\n            },\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Container, {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Grid, {\n                    minH: \"100vh\",\n                    p: 3,\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Stack, {\n                        spacing: {\n                            base: \"8\",\n                            md: \"10\"\n                        },\n                        align: \"center\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Stack, {\n                            spacing: {\n                                base: \"4\",\n                                md: \"6\"\n                            },\n                            textAlign: \"center\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Stack, {\n                                spacing: \"3\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Heading, {\n                                        size: {\n                                            base: \"xl\",\n                                            md: \"xl\"\n                                        },\n                                        fontWeight: \"bold\",\n                                        color: \"white\",\n                                        children: \"User Proof Membership\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/austinramos/Documents/Workspace/UserProofMembership/Frontend/src/pages/index.tsx\",\n                                        lineNumber: 32,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                        src: \"../assets/logo.png\",\n                                        alt: \"Image\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/austinramos/Documents/Workspace/UserProofMembership/Frontend/src/pages/index.tsx\",\n                                        lineNumber: 36,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_sismo_core_sismo_connect_react__WEBPACK_IMPORTED_MODULE_3__.SismoConnectButton, {\n                                        config: _config_sismo_connect_config__WEBPACK_IMPORTED_MODULE_4__.config,\n                                        // request proof of Github ownership\n                                        auths: [\n                                            {\n                                                authType: _sismo_core_sismo_connect_react__WEBPACK_IMPORTED_MODULE_3__.AuthType.GITHUB\n                                            }\n                                        ],\n                                        onResponseBytes: (response)=>{\n                                        // call your contract with the response as bytes\n                                        }\n                                    }, void 0, false, {\n                                        fileName: \"/Users/austinramos/Documents/Workspace/UserProofMembership/Frontend/src/pages/index.tsx\",\n                                        lineNumber: 38,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Text, {\n                                        size: {\n                                            base: \"md\",\n                                            md: \"lg\"\n                                        },\n                                        fontWeight: \"semibold\",\n                                        color: \"white\",\n                                        children: \"We build software that empowers organizations to effectively integrate their data, decisions, and operations.\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/austinramos/Documents/Workspace/UserProofMembership/Frontend/src/pages/index.tsx\",\n                                        lineNumber: 47,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Text, {\n                                        size: {\n                                            base: \"md\",\n                                            md: \"lg\"\n                                        },\n                                        fontWeight: \"semibold\",\n                                        color: \"white\",\n                                        children: \"Software that empowers organizations to effectively integrate their data, decisions, and operations.\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/austinramos/Documents/Workspace/UserProofMembership/Frontend/src/pages/index.tsx\",\n                                        lineNumber: 50,\n                                        columnNumber: 17\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/austinramos/Documents/Workspace/UserProofMembership/Frontend/src/pages/index.tsx\",\n                                lineNumber: 31,\n                                columnNumber: 15\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/austinramos/Documents/Workspace/UserProofMembership/Frontend/src/pages/index.tsx\",\n                            lineNumber: 30,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/austinramos/Documents/Workspace/UserProofMembership/Frontend/src/pages/index.tsx\",\n                        lineNumber: 29,\n                        columnNumber: 9\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/austinramos/Documents/Workspace/UserProofMembership/Frontend/src/pages/index.tsx\",\n                    lineNumber: 28,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/austinramos/Documents/Workspace/UserProofMembership/Frontend/src/pages/index.tsx\",\n                lineNumber: 27,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"/Users/austinramos/Documents/Workspace/UserProofMembership/Frontend/src/pages/index.tsx\",\n            lineNumber: 26,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/austinramos/Documents/Workspace/UserProofMembership/Frontend/src/pages/index.tsx\",\n        lineNumber: 25,\n        columnNumber: 5\n    }, this);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (App);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvaW5kZXgudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUEwQjtBQWlCQTtBQUUyRTtBQUM3QztBQUV4RCxTQUFTWTtJQUNQLHFCQUNFLDhEQUFDWCw0REFBY0E7UUFBQ0ksT0FBT0EsbURBQUtBO2tCQUMxQiw0RUFBQ0gsaURBQUdBO1lBQUNXLElBQUc7WUFBV0MsWUFBVztZQUEwQ0MsT0FBTTtZQUFvQkMsSUFBSTtnQkFBRUMsTUFBTTtnQkFBTUMsSUFBSTtZQUFLO3NCQUMzSCw0RUFBQ1osdURBQVNBOzBCQUNWLDRFQUFDRixrREFBSUE7b0JBQUNlLE1BQUs7b0JBQVFDLEdBQUc7OEJBQ3RCLDRFQUFDWixtREFBS0E7d0JBQUNhLFNBQVM7NEJBQUVKLE1BQU07NEJBQUtDLElBQUk7d0JBQUs7d0JBQUdJLE9BQU07a0NBQzNDLDRFQUFDZCxtREFBS0E7NEJBQUNhLFNBQVM7Z0NBQUVKLE1BQU07Z0NBQUtDLElBQUk7NEJBQUk7NEJBQUdLLFdBQVU7c0NBQ2hELDRFQUFDZixtREFBS0E7Z0NBQUNhLFNBQVE7O2tEQUNiLDhEQUFDZCxxREFBT0E7d0NBQUNpQixNQUFNOzRDQUFFUCxNQUFNOzRDQUFNQyxJQUFJO3dDQUFLO3dDQUFHTyxZQUFXO3dDQUFPVixPQUFNO2tEQUFROzs7Ozs7a0RBSXpFLDhEQUFDVzt3Q0FBSUMsS0FBSTt3Q0FBcUJDLEtBQUk7Ozs7OztrREFFbEMsOERBQUNuQiwrRUFBa0JBO3dDQUNmRSxRQUFRQSxnRUFBTUE7d0NBQ2Qsb0NBQW9DO3dDQUNwQ2tCLE9BQU87NENBQUM7Z0RBQUVDLFVBQVVwQixxRUFBUUEsQ0FBQ3FCOzRDQUFPO3lDQUFFO3dDQUN0Q0MsaUJBQWlCLENBQUNDO3dDQUNkLGdEQUFnRDt3Q0FDcEQ7Ozs7OztrREFHSiw4REFBQzlCLGtEQUFJQTt3Q0FBQ3FCLE1BQU07NENBQUVQLE1BQU07NENBQU1DLElBQUk7d0NBQUs7d0NBQUdPLFlBQVc7d0NBQVdWLE9BQU07a0RBQVE7Ozs7OztrREFHMUUsOERBQUNaLGtEQUFJQTt3Q0FBQ3FCLE1BQU07NENBQUVQLE1BQU07NENBQU1DLElBQUk7d0NBQUs7d0NBQUdPLFlBQVc7d0NBQVdWLE9BQU07a0RBQVE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVcxRjtBQUVBLGlFQUFlSCxHQUFHQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdXNlci1wcm9vZi1tZW1iZXJzaGlwLy4vc3JjL3BhZ2VzL2luZGV4LnRzeD8xOWEwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge1xuICBDaGFrcmFQcm92aWRlcixcbiAgQm94LFxuICBUZXh0LFxuICBMaW5rLFxuICBWU3RhY2ssXG4gIENvZGUsXG4gIEdyaWQsXG4gIHRoZW1lLFxuICBDb250YWluZXIsXG4gIEhlYWRpbmcsXG4gIEljb24sXG4gIElucHV0LFxuICBJbnB1dEdyb3VwLFxuICBJbnB1dExlZnRFbGVtZW50LFxuICBTdGFjayxcbn0gZnJvbSAnQGNoYWtyYS11aS9yZWFjdCc7XG5cbmltcG9ydCB7IFNpc21vQ29ubmVjdEJ1dHRvbiwgQXV0aFR5cGUsIFNpc21vQ29ubmVjdFJlc3BvbnNlIH0gZnJvbSBcIkBzaXNtby1jb3JlL3Npc21vLWNvbm5lY3QtcmVhY3RcIjtcbmltcG9ydCB7IGNvbmZpZyB9IGZyb20gXCIuLi9jb25maWcvc2lzbW8tY29ubmVjdC1jb25maWdcIjtcblxuZnVuY3Rpb24gQXBwKCkge1xuICByZXR1cm4gKFxuICAgIDxDaGFrcmFQcm92aWRlciB0aGVtZT17dGhlbWV9PlxuICAgICAgPEJveCBhcz1cInNlY3Rpb25cIiAgYmdHcmFkaWVudD0nbGluZWFyKHRvLXIsICMzNjMzOTAsICMwMDIwNEMsICMwOTNFNkYpJyBjb2xvcj1cImZnLmFjY2VudC5kZWZhdWx0XCIgcHk9e3sgYmFzZTogJzE2JywgbWQ6ICcyNCcgfX0+XG4gICAgICAgIDxDb250YWluZXI+XG4gICAgICAgIDxHcmlkIG1pbkg9XCIxMDB2aFwiIHA9ezN9PlxuICAgICAgICA8U3RhY2sgc3BhY2luZz17eyBiYXNlOiAnOCcsIG1kOiAnMTAnIH19IGFsaWduPVwiY2VudGVyXCI+XG4gICAgICAgICAgICA8U3RhY2sgc3BhY2luZz17eyBiYXNlOiAnNCcsIG1kOiAnNicgfX0gdGV4dEFsaWduPVwiY2VudGVyXCI+XG4gICAgICAgICAgICAgIDxTdGFjayBzcGFjaW5nPVwiM1wiPlxuICAgICAgICAgICAgICAgIDxIZWFkaW5nIHNpemU9e3sgYmFzZTogJ3hsJywgbWQ6ICd4bCcgfX0gZm9udFdlaWdodD1cImJvbGRcIiBjb2xvcj1cIndoaXRlXCI+XG4gICAgICAgICAgICAgICAgVXNlciBQcm9vZiBNZW1iZXJzaGlwXG4gICAgICAgICAgICAgICAgPC9IZWFkaW5nPlxuICAgICAgICAgICAgICAgIHsvKiA8TG9nbyAvPiAqL31cbiAgICAgICAgICAgICAgICA8aW1nIHNyYz1cIi4uL2Fzc2V0cy9sb2dvLnBuZ1wiIGFsdD1cIkltYWdlXCIgLz5cblxuICAgICAgICAgICAgICAgIDxTaXNtb0Nvbm5lY3RCdXR0b25cbiAgICAgICAgICAgICAgICAgICAgY29uZmlnPXtjb25maWd9XG4gICAgICAgICAgICAgICAgICAgIC8vIHJlcXVlc3QgcHJvb2Ygb2YgR2l0aHViIG93bmVyc2hpcFxuICAgICAgICAgICAgICAgICAgICBhdXRocz17W3sgYXV0aFR5cGU6IEF1dGhUeXBlLkdJVEhVQiB9XX1cbiAgICAgICAgICAgICAgICAgICAgb25SZXNwb25zZUJ5dGVzPXsocmVzcG9uc2U6IHN0cmluZykgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gY2FsbCB5b3VyIGNvbnRyYWN0IHdpdGggdGhlIHJlc3BvbnNlIGFzIGJ5dGVzXG4gICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgLz5cblxuICAgICAgICAgICAgICAgIDxUZXh0IHNpemU9e3sgYmFzZTogJ21kJywgbWQ6ICdsZycgfX0gZm9udFdlaWdodD1cInNlbWlib2xkXCIgY29sb3I9XCJ3aGl0ZVwiPlxuICAgICAgICAgICAgICAgICAgV2UgYnVpbGQgc29mdHdhcmUgdGhhdCBlbXBvd2VycyBvcmdhbml6YXRpb25zIHRvIGVmZmVjdGl2ZWx5IGludGVncmF0ZSB0aGVpciBkYXRhLCBkZWNpc2lvbnMsIGFuZCBvcGVyYXRpb25zLlxuICAgICAgICAgICAgICAgIDwvVGV4dD5cbiAgICAgICAgICAgICAgICA8VGV4dCBzaXplPXt7IGJhc2U6ICdtZCcsIG1kOiAnbGcnIH19IGZvbnRXZWlnaHQ9XCJzZW1pYm9sZFwiIGNvbG9yPVwid2hpdGVcIj5cbiAgICAgICAgICAgICAgICAgIFNvZnR3YXJlIHRoYXQgZW1wb3dlcnMgb3JnYW5pemF0aW9ucyB0byBlZmZlY3RpdmVseSBpbnRlZ3JhdGUgdGhlaXIgZGF0YSwgZGVjaXNpb25zLCBhbmQgb3BlcmF0aW9ucy5cbiAgICAgICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICAgICAgIDwvU3RhY2s+XG4gICAgICAgICAgICA8L1N0YWNrPlxuICAgICAgICAgIDwvU3RhY2s+XG4gICAgICAgIDwvR3JpZD5cbiAgICAgICAgPC9Db250YWluZXI+XG4gICAgICA8L0JveD5cbiAgICA8L0NoYWtyYVByb3ZpZGVyPlxuICApO1xufVxuXG5leHBvcnQgZGVmYXVsdCBBcHA7XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJDaGFrcmFQcm92aWRlciIsIkJveCIsIlRleHQiLCJHcmlkIiwidGhlbWUiLCJDb250YWluZXIiLCJIZWFkaW5nIiwiU3RhY2siLCJTaXNtb0Nvbm5lY3RCdXR0b24iLCJBdXRoVHlwZSIsImNvbmZpZyIsIkFwcCIsImFzIiwiYmdHcmFkaWVudCIsImNvbG9yIiwicHkiLCJiYXNlIiwibWQiLCJtaW5IIiwicCIsInNwYWNpbmciLCJhbGlnbiIsInRleHRBbGlnbiIsInNpemUiLCJmb250V2VpZ2h0IiwiaW1nIiwic3JjIiwiYWx0IiwiYXV0aHMiLCJhdXRoVHlwZSIsIkdJVEhVQiIsIm9uUmVzcG9uc2VCeXRlcyIsInJlc3BvbnNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/pages/index.tsx\n");

/***/ }),

/***/ "./node_modules/next/dist/server/future/route-modules/pages/module.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/server/future/route-modules/pages/module.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    PagesRouteModule: function() {\n        return PagesRouteModule;\n    },\n    default: function() {\n        return _default;\n    }\n});\nconst _routemodule = __webpack_require__(/*! ../route-module */ \"../route-module\");\nconst _render = __webpack_require__(/*! ../../../render */ \"../../../render\");\nclass PagesRouteModule extends _routemodule.RouteModule {\n    setup() {\n        throw new Error(\"Method not implemented.\");\n    }\n    handle() {\n        throw new Error(\"Method not implemented.\");\n    }\n    async render(req, res, pathname, query, renderOpts) {\n        const result = await (0, _render.renderToHTML)(req, res, pathname, query, renderOpts);\n        return result;\n    }\n}\nconst _default = PagesRouteModule;\n\n//# sourceMappingURL=module.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy9tb2R1bGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixNQUFNLENBR0w7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QscUJBQXFCLG1CQUFPLENBQUMsd0NBQWlCO0FBQzlDLGdCQUFnQixtQkFBTyxDQUFDLHdDQUFpQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3VzZXItcHJvb2YtbWVtYmVyc2hpcC8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzL21vZHVsZS5qcz9jOWNkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuMCAmJiAobW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgUGFnZXNSb3V0ZU1vZHVsZTogbnVsbCxcbiAgICBkZWZhdWx0OiBudWxsXG59KTtcbmZ1bmN0aW9uIF9leHBvcnQodGFyZ2V0LCBhbGwpIHtcbiAgICBmb3IodmFyIG5hbWUgaW4gYWxsKU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIG5hbWUsIHtcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgZ2V0OiBhbGxbbmFtZV1cbiAgICB9KTtcbn1cbl9leHBvcnQoZXhwb3J0cywge1xuICAgIFBhZ2VzUm91dGVNb2R1bGU6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gUGFnZXNSb3V0ZU1vZHVsZTtcbiAgICB9LFxuICAgIGRlZmF1bHQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX2RlZmF1bHQ7XG4gICAgfVxufSk7XG5jb25zdCBfcm91dGVtb2R1bGUgPSByZXF1aXJlKFwiLi4vcm91dGUtbW9kdWxlXCIpO1xuY29uc3QgX3JlbmRlciA9IHJlcXVpcmUoXCIuLi8uLi8uLi9yZW5kZXJcIik7XG5jbGFzcyBQYWdlc1JvdXRlTW9kdWxlIGV4dGVuZHMgX3JvdXRlbW9kdWxlLlJvdXRlTW9kdWxlIHtcbiAgICBzZXR1cCgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTWV0aG9kIG5vdCBpbXBsZW1lbnRlZC5cIik7XG4gICAgfVxuICAgIGhhbmRsZSgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTWV0aG9kIG5vdCBpbXBsZW1lbnRlZC5cIik7XG4gICAgfVxuICAgIGFzeW5jIHJlbmRlcihyZXEsIHJlcywgcGF0aG5hbWUsIHF1ZXJ5LCByZW5kZXJPcHRzKSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0ICgwLCBfcmVuZGVyLnJlbmRlclRvSFRNTCkocmVxLCByZXMsIHBhdGhuYW1lLCBxdWVyeSwgcmVuZGVyT3B0cyk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuY29uc3QgX2RlZmF1bHQgPSBQYWdlc1JvdXRlTW9kdWxlO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1tb2R1bGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/server/future/route-modules/pages/module.js\n");

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"react\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV$1 =  jsxWithValidation ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV$1;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react-jsx-dev-runtime.development.js\n");

/***/ }),

/***/ "./node_modules/react/jsx-dev-runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react/jsx-dev-runtime.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"./node_modules/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSx1SkFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91c2VyLXByb29mLW1lbWJlcnNoaXAvLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzPzU3NzciXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react/jsx-dev-runtime.js\n");

/***/ }),

/***/ "../route-module":
/*!************************************************************************!*\
  !*** external "next/dist/server/future/route-modules/route-module.js" ***!
  \************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/server/future/route-modules/route-module.js");

/***/ }),

/***/ "../../../render":
/*!*********************************************!*\
  !*** external "next/dist/server/render.js" ***!
  \*********************************************/
/***/ ((module) => {

module.exports = require("next/dist/server/render.js");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

module.exports = require("react");

/***/ }),

/***/ "@chakra-ui/react":
/*!***********************************!*\
  !*** external "@chakra-ui/react" ***!
  \***********************************/
/***/ ((module) => {

module.exports = import("@chakra-ui/react");;

/***/ }),

/***/ "js-base64":
/*!****************************!*\
  !*** external "js-base64" ***!
  \****************************/
/***/ ((module) => {

module.exports = import("js-base64");;

/***/ }),

/***/ "pako":
/*!***********************!*\
  !*** external "pako" ***!
  \***********************/
/***/ ((module) => {

module.exports = import("pako");;

/***/ }),

/***/ "viem":
/*!***********************!*\
  !*** external "viem" ***!
  \***********************/
/***/ ((module) => {

module.exports = import("viem");;

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?page=%2F&absolutePagePath=.%2Fsrc%2Fpages%2Findex.tsx&preferredRegion=&middlewareConfig=e30%3D!"));
module.exports = __webpack_exports__;

})();